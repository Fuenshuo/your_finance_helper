---
globs: *.dart
description: UI/UX design system and component guidelines
---

# 家庭资产记账应用 - UI/UX设计系统规范

## 核心设计哲学
**轻松无压力的记账体验** - 通过柔和的色彩、清晰的布局和直观的动效，让复杂的财务管理变得简单而愉悦。设计遵循"用户无感知的复式记账架构"，让用户专注于财务目标而非技术细节。

## 设计原则
1. **一致性优先** - 所有组件遵循统一的设计语言
2. **响应式设计** - 适配Web、iOS、Android三端，移动端优先
3. **性能导向** - 流畅的60fps体验，避免过度动画
4. **可访问性** - 支持不同屏幕尺寸和像素密度
5. **卡片式布局** - 信息分层清晰，视觉层次分明

## 色彩系统
### 主色调
- **主背景色**: `#F7F7FA` (淡雅灰) - 营造轻松氛围
- **主题色**: `#EAEAFB` (温柔紫) - 辅助背景和强调
- **主操作色**: `#007AFF` (活力蓝) - 主要按钮和链接

### 文字色彩
- **主要文字色**: `#1C1C1E` (深邃灰) - 标题和重要内容
- **辅助文字色**: `#8A8A8E` (中性灰) - 说明文字和次要信息
- **分割线色**: `#E5E5EA` (浅灰) - 组件边界

### 功能色彩
- **增加/收益色**: `#FF3B30` (温暖红) - 收入、资产增加
- **减少/负债色**: `#34C759` (理性绿) - 支出、负债
- **警告色**: `#FF9500` (橙色) - 警告和提醒

## 布局系统
### 基础单位
- **8pt网格系统** - 所有间距都是8的倍数
- **圆角半径**: 12pt - 统一圆角，营造现代感
- **卡片阴影**: `color: Colors.black.withOpacity(0.04), blurRadius: 16, offset: Offset(0, 4)`

### 响应式设计
- **Web端**: 保持原始尺寸
- **移动端**: 根据屏幕宽度和像素密度自动缩放
- **小屏设备**: 字体和间距适当缩小，确保可读性

## 组件使用规范
### 基础组件
- **AppCard** - 所有卡片容器的基础组件
- **AppCardWithTitle** - 带标题的卡片
- **StatCard** - 统计数据展示卡片
- **AppAnimations** - 统一的动效处理

### 页面结构
```dart
Scaffold(
  backgroundColor: context.primaryBackground,  // 使用主题背景色
  appBar: AppBar(
    backgroundColor: Colors.white,             // 白色应用栏
    elevation: 0,                              // 无阴影
    title: Text('页面标题'),
  ),
  body: SingleChildScrollView(                 // 可滚动内容
    child: Column(
      children: [
        // 使用AppCard包装内容
        AppCard(child: ...),
        SizedBox(height: context.responsiveSpacing16),
        // 更多内容...
      ],
    ),
  ),
)
```

## 动效系统
### 页面转场
```dart
Navigator.of(context).push(
  AppAnimations.createRoute(目标页面),
);
```

### 列表动画
```dart
AppAnimations.animatedListItem(
  index: 0,  // 索引用于错落动画
  child: 列表项组件,
)
```

### 按钮反馈
- **缩放**: 0.95倍
- **透明度**: 0.8
- **持续时间**: 150ms

### 数字滚动
```dart
AppAnimations.animatedNumber(
  value: 数值,
  formatter: (value) => context.formatAmount(value),
)
```

### 模态弹窗
```dart
AppAnimations.showAppModalBottomSheet(
  context: context,
  child: 弹窗内容,
)
```

## 文本样式系统
### 响应式文本
```dart
// 使用响应式文本样式
Text('标题', style: context.responsiveHeadlineMedium),
Text('正文', style: context.responsiveBodyLarge),
Text('说明', style: context.responsiveBodyMedium),

// 移动端优化样式
Text('移动端标题', style: context.mobileTitle),
Text('移动端正文', style: context.mobileBody),

// 金额显示
Text('¥1,234.56', style: context.amountStyle(isPositive: true)),
Text('¥1,234.56', style: context.largeAmountStyle(isPositive: false)),
```

### 字体规范
- **字体族**: 'Alibaba PuHuiTi' (阿里巴巴普惠体)
- **响应式缩放**: 根据设备自动调整
- **字重层次**: w400(常规) → w500(中等) → w600(半粗) → w700(粗体)

## 间距使用规范
```dart
// 响应式间距 - 推荐使用
context.responsiveSpacing4   // 4pt
context.responsiveSpacing8   // 8pt
context.responsiveSpacing12  // 12pt
context.responsiveSpacing16  // 16pt
context.responsiveSpacing24  // 24pt
context.responsiveSpacing32  // 32pt

// 固定间距 - 特殊场景使用
context.spacing8
context.spacing16
context.spacing24
```

## 数据格式化
```dart
// 金额格式化
context.formatAmount(1234.56)        // ¥1,234.56
context.formatAmount(1234.56, currency: 'USD')  // $1,234.56

// 百分比格式化
context.formatPercentage(12.5)       // 12.5%

// 日期时间格式化
context.formatDateTime(DateTime.now())  // 2024-01-15 14:30
context.formatDate(DateTime.now())      // 2024-01-15
context.formatTime(DateTime.now())      // 14:30
```

## 性能优化规范
### 构建监控
```dart
@override
Widget build(BuildContext context) => PerformanceMonitor.monitorBuild(
  '组件名称',
  () => 实际构建内容,
);
```

### 动画优化
- 避免过度动画，保持60fps
- 使用`AppAnimations`统一管理
- 列表动画使用错落效果，避免同时触发

### 响应式优化
- 移动端字体和间距自动缩放
- 高像素密度设备进一步优化
- Web端保持原始尺寸

## 开发最佳实践
1. **始终使用主题扩展方法** - `context.primaryBackground` 而非硬编码颜色
2. **响应式优先** - 使用 `responsiveSpacing` 和 `responsiveFontSize`
3. **组件复用** - 优先使用 `AppCard`、`StatCard` 等基础组件
4. **动效统一** - 使用 `AppAnimations` 处理所有动画
5. **性能监控** - 关键页面使用 `PerformanceMonitor.monitorBuild`
6. **格式化数据** - 使用主题扩展方法格式化金额、日期等

## 文件引用
- [AppTheme](mdc:lib/theme/app_theme.dart) - 主题和色彩定义
- [ResponsiveTextStyles](mdc:lib/theme/responsive_text_styles.dart) - 响应式文本样式
- [AppCard](mdc:lib/widgets/app_card.dart) - 基础卡片组件
- [AppAnimations](mdc:lib/widgets/app_animations.dart) - 动效系统
- [PerformanceMonitor](mdc:lib/utils/performance_monitor.dart) - 性能监控